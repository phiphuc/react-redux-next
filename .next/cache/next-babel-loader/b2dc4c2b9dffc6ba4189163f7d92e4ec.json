{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { reauthenticate, getCookie, checkServerSideCookie } from '../actions/authActions';\nimport Router from 'next/router';\nimport Layout from '../components/Layout/Layout';\n\nconst Whoami = ({\n  user\n}) => __jsx(Layout, {\n  title: \"Who Am I\"\n}, user && __jsx(React.Fragment, null, __jsx(\"h2\", null, \"Who im i\"), _JSON$stringify(user)) || 'Please sign in');\n\nWhoami.getInitialProps = async ctx => {\n  checkServerSideCookie(ctx);\n\n  if (ctx.isServer) {\n    if (ctx.req.headers.cookie) {\n      const token = getCookie('token', ctx.req);\n      console.log('WHOAMI ', token);\n      ctx.store.dispatch(reauthenticate(token));\n    }\n  } else {\n    const token = ctx.store.getState().authentication.token;\n\n    if (token && (ctx.pathname === '/signin' || ctx.pathname === '/signup')) {\n      setTimeout(function () {\n        Router.push('/');\n      }, 0);\n    }\n  }\n\n  const token = ctx.store.getState().authentication.token;\n\n  if (token) {\n    return {\n      user: 'Ryan'\n    };\n  }\n};\n\nexport default connect(state => state, {\n  reauthenticate\n})(Whoami);","map":{"version":3,"sources":["G:/Phinp/Rect-Redux-Nextjs/pages/whoami.js"],"names":["axios","connect","reauthenticate","getCookie","checkServerSideCookie","Router","Layout","Whoami","user","getInitialProps","ctx","isServer","req","headers","cookie","token","console","log","store","dispatch","getState","authentication","pathname","setTimeout","push","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,qBAApC,QAAkE,wBAAlE;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,MAAM,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KACV,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAG;AAAhB,GACMA,IAAI,IACF,4BACA,6BADA,EAEK,gBAAeA,IAAf,CAFL,CADH,IAKI,gBANT,CADJ;;AAWAD,MAAM,CAACE,eAAP,GAAyB,MAAMC,GAAN,IAAc;AACnCN,EAAAA,qBAAqB,CAACM,GAAD,CAArB;;AACA,MAAGA,GAAG,CAACC,QAAP,EAAgB;AACZ,QAAID,GAAG,CAACE,GAAJ,CAAQC,OAAR,CAAgBC,MAApB,EAA4B;AACxB,YAAMC,KAAK,GAAGZ,SAAS,CAAC,OAAD,EAAUO,GAAG,CAACE,GAAd,CAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAL,MAAAA,GAAG,CAACQ,KAAJ,CAAUC,QAAV,CAAmBjB,cAAc,CAACa,KAAD,CAAjC;AACD;AACN,GAND,MAMO;AACP,UAAMA,KAAK,GAAGL,GAAG,CAACQ,KAAJ,CAAUE,QAAV,GAAqBC,cAArB,CAAoCN,KAAlD;;AAEA,QAAIA,KAAK,KAAKL,GAAG,CAACY,QAAJ,KAAiB,SAAjB,IAA8BZ,GAAG,CAACY,QAAJ,KAAiB,SAApD,CAAT,EAAyE;AACvEC,MAAAA,UAAU,CAAC,YAAW;AACpBlB,QAAAA,MAAM,CAACmB,IAAP,CAAY,GAAZ;AACD,OAFS,EAEP,CAFO,CAAV;AAGD;AACF;;AACA,QAAMT,KAAK,GAAGL,GAAG,CAACQ,KAAJ,CAAUE,QAAV,GAAqBC,cAArB,CAAoCN,KAAlD;;AACC,MAAGA,KAAH,EAAS;AACL,WAAO;AAACP,MAAAA,IAAI,EAAE;AAAP,KAAP;AACH;AACJ,CArBD;;AAuBA,eAAeP,OAAO,CAACwB,KAAK,IAAIA,KAAV,EAAiB;AAAEvB,EAAAA;AAAF,CAAjB,CAAP,CAA4CK,MAA5C,CAAf","sourcesContent":["import axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { reauthenticate, getCookie, checkServerSideCookie  } from '../actions/authActions';\r\nimport Router from 'next/router';\r\nimport Layout from '../components/Layout/Layout';\r\n\r\nconst Whoami =({user}) => (\r\n    <Layout title = \"Who Am I\">\r\n        {(user &&  (\r\n            <>\r\n            <h2>Who im i</h2>\r\n                {JSON.stringify(user)}\r\n            </>\r\n        )) ||'Please sign in'}\r\n    </Layout>\r\n)\r\n\r\nWhoami.getInitialProps = async ctx =>  {\r\n    checkServerSideCookie(ctx);\r\n    if(ctx.isServer){\r\n        if (ctx.req.headers.cookie) {\r\n            const token = getCookie('token', ctx.req);\r\n            console.log('WHOAMI ', token);\r\n            ctx.store.dispatch(reauthenticate(token));\r\n          }\r\n    } else {\r\n    const token = ctx.store.getState().authentication.token;\r\n\r\n    if (token && (ctx.pathname === '/signin' || ctx.pathname === '/signup')) {\r\n      setTimeout(function() {\r\n        Router.push('/');\r\n      }, 0);\r\n    }\r\n  }\r\n   const token = ctx.store.getState().authentication.token;\r\n    if(token){\r\n        return {user: 'Ryan'};\r\n    }\r\n}\r\n\r\nexport default connect(state => state, { reauthenticate })(Whoami);"]},"metadata":{},"sourceType":"module"}