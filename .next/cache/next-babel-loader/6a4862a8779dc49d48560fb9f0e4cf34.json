{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst foo = (state = {\n  foo: ''\n}, action) => {\n  switch (action.type) {\n    case 'FOO':\n      return _objectSpread({}, state, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default foo;","map":{"version":3,"sources":["G:/Phinp/Rect-Redux-Nextjs/reducer/foo.js"],"names":["foo","state","action","type","payload"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,GAAG,GAAG,CAACC,KAAK,GAAG;AAAED,EAAAA,GAAG,EAAE;AAAP,CAAT,EAAqBE,MAArB,KAAgC;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,+BAAYF,KAAZ;AAAmBD,QAAAA,GAAG,EAAEE,MAAM,CAACE;AAA/B;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPD;;AASA,eAAeD,GAAf","sourcesContent":["const foo = (state = { foo: ''}, action) => {\r\n    switch (action.type){\r\n        case 'FOO': \r\n            return { ...state, foo: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default foo"]},"metadata":{},"sourceType":"module"}